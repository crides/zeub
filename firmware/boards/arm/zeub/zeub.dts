/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/led/led.h>
#include <dt-bindings/zeub/issi_transform.h>
#include "zeub-pinctrl.dtsi"

 / {
	chosen {
		zephyr,bt-mon-uart = &uart0;
		zephyr,bt-c2h-uart = &uart0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &flash_code_raw;
        zephyr,console = &cdc_dev;
        zephyr,display = &oled;
	};

    led_strip: led_strip {
        compatible = "pwm-leds";
        strip_w0 {
            pwms = <&pwm0 0 100000 0>;
        };
        strip_y0 {
            pwms = <&pwm0 1 100000 0>;
        };
        strip_w1 {
            pwms = <&pwm0 3 100000 0>;
        };
        strip_y1 {
            pwms = <&pwm0 2 100000 0>;
        };
    };

    bat {
        compatible = "zeub,battery-voltage-divider";
        io-channels = <&adc 1>;
        output-ohms = <1>;
        full-ohms = <(1 + 1)>;
    };

    buttons: kscan {
        compatible = "zeub,kscan-gpio-direct";
        status = "okay";
        input-gpios
			= <&gpio0 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>      // Encoder push button
			, <&gpio1  1 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>      // 5 way select up/A
			, <&gpio1 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>      // 5 way select down/D
			, <&gpio1  4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>      // 5 way select left/C
			, <&gpio1 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>      // 5 way select right/B
			, <&gpio1  2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>      // 5 way select center/E
            ;
    };

	roller: roller {
		compatible = "alps,ec11";
		status = "okay";
		a-gpios = <&gpio0 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
		b-gpios = <&gpio1 6 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
		resolution = <4>;
	};
};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

/* &spi0 { */
/*     compatible = "nordic,nrf-spim"; */
/*     /1* status = "okay"; *1/ */
/*     sck-pin = <19>; */
/*     mosi-pin = <21>; */
/*     miso-pin = <23>; */
/* }; */

&i2c0 {
    compatible = "nordic,nrf-twi";
    status = "okay";
    pinctrl-0 = <&i2c0_def>;
    pinctrl-names = "default";
    clock-frequency = <I2C_BITRATE_FAST>;
    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        status = "okay";
        reg = <0x3c>;
        width = <128>;
        height = <64>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <63>;
        prechargep = <0x22>;
    };

    tmp117: tmp117@49 {
        compatible = "ti,tmp116";
        status = "okay";
        reg = <0x49>;
    };

#define PIX(SW1, CS1, CS2, CS3) RGB(SW(SW1), CS(CS1), CS(CS2), CS(CS3))

	white_left: is31fl3729@34 {
		compatible = "issi,is31fl3729";
        status = "okay";
		reg = <0x34>;
		r-ext = <10>;
		led-max-current = <1>;
		sdb-gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		chain-length = <128>;
        scaling = <75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75>;
		map = < >;
    };

	white_right: is31fl3729@35 {
		compatible = "issi,is31fl3729";
        status = "okay";
		reg = <0x35>;
		r-ext = <10>;
		led-max-current = <1>;
		sdb-gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		chain-length = <128>;
        scaling = <75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75>;
		map = < >;
    };

	rgb_left: is31fl3729@36 {
		compatible = "issi,is31fl3729";
        status = "okay";
		reg = <0x36>;
		r-ext = <10>;
		led-max-current = <1>;
		sdb-gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		chain-length = <96>;
#define BLUE 200
#define RED 255
#define GREEN 160
        scaling = <0 RED GREEN BLUE RED GREEN BLUE RED GREEN BLUE RED GREEN BLUE 0 0 0>;

		map = <
			PIX(1, 2, 3, 4) PIX(1, 5, 6, 7) PIX(1, 8, 9, 10) PIX(1, 11, 12, 13)
			PIX(2, 2, 3, 4) PIX(2, 5, 6, 7) PIX(2, 8, 9, 10) PIX(2, 11, 12, 13)
			PIX(3, 2, 3, 4) PIX(3, 5, 6, 7) PIX(3, 8, 9, 10) PIX(3, 11, 12, 13)
			PIX(4, 2, 3, 4) PIX(4, 5, 6, 7) PIX(4, 8, 9, 10) PIX(4, 11, 12, 13)
			PIX(5, 2, 3, 4) PIX(5, 5, 6, 7) PIX(5, 8, 9, 10) PIX(5, 11, 12, 13)
			PIX(6, 2, 3, 4) PIX(6, 5, 6, 7) PIX(6, 8, 9, 10) PIX(6, 11, 12, 13)
			PIX(7, 2, 3, 4) PIX(7, 5, 6, 7) PIX(7, 8, 9, 10) PIX(7, 11, 12, 13)
			PIX(8, 2, 3, 4) PIX(8, 5, 6, 7) PIX(8, 8, 9, 10) PIX(8, 11, 12, 13)
            >;
    };

	rgb_right: is31fl3729@37 {
		compatible = "issi,is31fl3729";
        status = "okay";
		reg = <0x37>;
		r-ext = <10>;
		led-max-current = <1>;
		sdb-gpios = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		chain-length = <96>;
        scaling = <0 RED GREEN BLUE RED GREEN BLUE RED GREEN BLUE RED GREEN BLUE 0 0 0>;

		map = <
			PIX(1, 2, 3, 4) PIX(1, 5, 6, 7) PIX(1, 8, 9, 10) PIX(1, 11, 12, 13)
			PIX(2, 2, 3, 4) PIX(2, 5, 6, 7) PIX(2, 8, 9, 10) PIX(2, 11, 12, 13)
			PIX(3, 2, 3, 4) PIX(3, 5, 6, 7) PIX(3, 8, 9, 10) PIX(3, 11, 12, 13)
			PIX(4, 2, 3, 4) PIX(4, 5, 6, 7) PIX(4, 8, 9, 10) PIX(4, 11, 12, 13)
			PIX(5, 2, 3, 4) PIX(5, 5, 6, 7) PIX(5, 8, 9, 10) PIX(5, 11, 12, 13)
			PIX(6, 2, 3, 4) PIX(6, 5, 6, 7) PIX(6, 8, 9, 10) PIX(6, 11, 12, 13)
			PIX(7, 2, 3, 4) PIX(7, 5, 6, 7) PIX(7, 8, 9, 10) PIX(7, 11, 12, 13)
			PIX(8, 2, 3, 4) PIX(8, 5, 6, 7) PIX(8, 8, 9, 10) PIX(8, 11, 12, 13)
            >;
    };
};

&spi1 { status = "disabled"; };

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	my-partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		flash_sd: partition_sd@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		flash_mbr: partition@0 {
			label = "mbr";
			reg = <0x00000000 0x00001000>;
		};
		flash_code_soft: partition@26000 {
			label = "code_partition_softdevice";
			reg = <0x00026000 0x000c6000>;
		};
		flash_code: partition@1000 {
			label = "code_partition";
			reg = <0x00001000 0x000eb000>;
		};
		flash_code_raw: partition_raw@0 {
			label = "raw_code_partition";
			reg = <0x00000000 0x000ec000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		flash_boot: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};

zephyr_udc0: &usbd {
	compatible = "nordic,nrf-usbd";
	status = "okay";

	cdc_dev: cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};

&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_def>;
    pinctrl-names = "default";
};
